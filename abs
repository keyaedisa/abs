#!/bin/bash
#set -e

source /etc/abs/misc/.bashFormatting
source /etc/abs/.options

trap_ctrlc() {
	echo
    echo "Ctrl-C detected. Ending current abs session."
    exit
}

trap "trap_ctrlc" 2

absC() {
	echo "Oki, let's get ready to build a custom iso using a user provided profile."
	read -p "What is the name of the archiso profile abs will be building your iso with? : " archisoProfile
	echo
	echo "Scanning for provided archiso profile."
	if [[ ! -d $archisoProfile ]]; then
		echo "Couldn't find the archiso profile you provided in the current directory."
		echo "Please change to the proper directory and call abs once more."
	else
		echo "abs found your archiso profile. abs will now begin your iso's build process."
		custom
	fi
}

absX() {
	echo "Oki, let's get ready to build a xero iso from the current up to date git build repo."
	echo
	echo "Scanning for xerolinux profile."
	if [[ ! -d xerolinux ]]; then
		echo "Couldn't find the xerolinux profile in the current directory."
		echo "Please change to the proper directory and call abs once more."
	else
		echo "abs found the xerolinux profile. abs will now begin the xero build process." && sleep 1.7
		xero
	fi
}

if [[ $1 == "help" || $1 == "-help" || $1 == "-h" || $1 == "-H" ]]; then
	helpOpt
elif [[ $1 == "custom" || $1 == "Custom" || $1 == "CUSTOM" || $1 == "-c" || $1 == "-C" ]]; then
	absC
elif [[ $1 == "xero" || $1 == "Xero" || $1 == "XERO" || $1 == "xerolinux" || $1 == "XeroLinux" || $1 == "Xerolinux" || $1 == "xeroLinux" || $1 == "-x" || $1 == "-X" ]]; then
	absX
elif [[ -n $1 ]]; then
	echo "Sorry, abs does not recognize this option. Run ${fgCyan}abs -help${txReset} for a list of accepted options and their brief descriptions."
else
	read -p "Are you looking to build a ${fgCyan}${txUnderline}custom${txReset} iso or ${fgCyan}${txUnderline}xero${txReset} iso or do you need ${fgRed}help${txReset}? " answer
	finished='0'
	while [ finished != 1 ]; do
	case $answer in
		custom | Custom | CUSTOM | -C | -c )
			finished='1'
			absC
			;;
		xero | XERO | xerolinux | XeroLinux | Xerolinux | xeroLinux | XEROLINUX | -x | -X )
			finished='1'
			absX
			;;
		help | -h | -H | HELP | help )
			helpOpt
			;;
		* )
			echo "Not a valid abs option. Enter ${fgCyan}${txUnderline}custom${txReset} or ${fgCyan}${txUnderline}xero${txReset}"
			echo "Additionally you can run ${fgCyan}abs help${txReset} for abs options and descriptions."
			read -p "Are you looking to build a ${fgCyan}${txUnderline}custom${txReset} iso or a ${fgCyan}${txUnderline}xero${txReset} iso? " answer
			;;
	esac
	done
fi

# Functionality for the future potentially
# Error catching
#	echo "${txBold}last-error${txReset}"
#	echo "Adding this option to abs will print last exit/err code abs set when last ran."
#	echo $fgMagenta&&xUnicode 2730 49&&echo $txReset
